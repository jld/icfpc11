TODO: test simulator

Stuff to do with simulator to simplebomb:
  use actual vitalities for "depleted" and "bombed"
    sort help targets by lowness?
  maybe switch from number of plays to abstract term complexity
    (how to compute?  flatten to spell and incant, or...?)
    rationale: don't want to bomb a term that's already fetched & built on
    but, that may not waste as much of their time
    could use moving average of touches, w/ bonus for gets, blah blah blah
  recover from simple kills with a revive
  counter-revive: dec attack
  counter-dec: follow revive with fast help
  counter-revive: send zombies
    what's the cheapest zombie to add to a bomb?
    if the opponent has revive, then a non-zom kill is a waste
      and will probably get us dead, because they can continue
       and we blew our rush
    but if they don't, then a zombomb is extra turns
  counter-zombie: pay attention and rebuild
    ugh


###
Old notes:

Dynamic register allocation may be important.
  e.g., the cost of copying stuff to/from small numbers may be worth it
  Consider that a rectified literal costs 3n, but a copy costs n
    And literals can't always be eliminated
However, fast recursion requires hard-coding an index
  (so, uh, whatever happened with that?)
